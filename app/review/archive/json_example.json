{
    "swagger": "2.0",
    "info": {
      "description": "Yapulsa V2 API, used for archipelago projects, multi partner, multi cluster etc",
      "version": "0.0.1",
      "title": "Yapulsa V2 API"
    },
    "tags": [
      {
        "name": "user",
        "description": "User API"
      },
      {
        "name": "cluster",
        "description": "Master Table Cluster API"
      },
      {
        "name": "area",
        "description": "Master Table Area API"
      },
      {
        "name": "partner",
        "description": "Master Table Partner API"
      },
      {
        "name": "biller",
        "description": "Master Table Biller API"
      },
      {
        "name": "operator",
        "description": "Master Table Biller API"
      },
      {
        "name": "home_product",
        "description": "Master Table For Home Product List in Front End"
      }
    ],
    "schemes": [
      "https"
    ],
    "paths": {
      "/user/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Login And Access Token Fetch",
          "operationId": "user-login",
          "description": "User Login And Access Token & user profile Fetch\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to make Login Process\n",
              "schema": {
                "$ref": "#/definitions/LoginRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LoginResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/otp/validate": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User OTP Validate",
          "operationId": "user-otp-validate",
          "description": "User OTP Validate\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to make OTP Validate Process\n",
              "schema": {
                "required": [
                  "otp"
                ],
                "properties": {
                  "otp": {
                    "type": "string",
                    "example": "12345",
                    "description": "OTP to validated"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/otp/resend": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User OTP Resend",
          "operationId": "user-otp-resend",
          "description": "User OTP Resend\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/OTPResentResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            },
            "422": {
              "description": "UNPROCESSABLE ENTITY"
            }
          }
        }
      },
      "/user/refresh": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Refresh Token",
          "operationId": "user-refresh-token",
          "description": "User Refresh Token\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Refresh Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/RefreshTokenResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/logout": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Logout",
          "operationId": "user-logout",
          "description": "User Logout\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LogoutResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/request_change_password_otp": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Request Change Password Via OTP And Access Token Fetch",
          "operationId": "user-request-change-password-otp",
          "description": "Request Change Password Via OTP And Access Token Fetch\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change password via OTP Process\n",
              "schema": {
                "$ref": "#/definitions/RequetsChangePasswordOTPRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "properties": {
                  "rescode": {
                    "type": "string",
                    "example": "0000",
                    "description": "Response Code"
                  },
                  "message": {
                    "$ref": "#/definitions/ResponseMessage"
                  },
                  "data": {}
                }
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/change_password_otp": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Change Password Via OTP And Access Token Fetch",
          "operationId": "user-change-password-otp",
          "description": "Change Password Via OTP And Access Token Fetch\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change password via OTP Process\n",
              "schema": {
                "$ref": "#/definitions/ChangePasswordOTPRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LoginResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/downline": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Get All Downline User",
          "operationId": "user-get-downline",
          "description": "Get All Downline List\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserListResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/transfer_downline": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Transfer Downline between upline-user",
          "operationId": "user-transfer-downline",
          "description": "Transfer upline-user downline to another upline-user.\n This end-point only available for few role (SADM, ADM, MGR_PUSAT, MGR_DAERAH).\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Request Body Value\n",
              "schema": {
                "$ref": "#/definitions/TransferDownlineRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            },
            "422": {
              "description": "UNPROCESSABLE ENTITY"
            }
          }
        }
      },
      "/user/profile": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Profile",
          "operationId": "user-profile",
          "description": "User Profile\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ProfileResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/profile/update": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Profile for Front End",
          "operationId": "user-update-profile",
          "description": "Update User Profile",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change use pin state for transaction\n",
              "schema": {
                "$ref": "#/definitions/UserUpdateRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ProfileUpdateResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/mixpanel": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Mixpanel",
          "operationId": "user-Mixpanel",
          "description": "User Mixpanel\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/MixpanelResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/callback_piggybank": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Update User Kredit Value from Piggy Bank",
          "operationId": "user-update-user-kredit",
          "description": "User Update User Kredit\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "User-Agent",
              "in": "header",
              "description": "User-Agent",
              "required": true,
              "type": "string",
              "format": "string",
              "default": ""
            },
            {
              "name": "X-Token",
              "in": "header",
              "description": "X-Token value md5(concat(User_Agent,YYYYMMDDHH))",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "md5(User-AgentYYYYMMDDHH)"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to make Update Kredit User Process\n",
              "schema": {
                "required": [
                  "event",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "example": "last balance updated",
                    "description": "last balance updated"
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "currency",
                      "identifier",
                      "balance",
                      "timestamp"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "example": "IDR",
                        "description": "IDR or POIN"
                      },
                      "identifier": {
                        "type": "string",
                        "example": "123",
                        "description": "Piggybank Identifier"
                      },
                      "balance": {
                        "type": "integer",
                        "example": 10000,
                        "description": "User Last Balance"
                      },
                      "timestamp": {
                        "type": "integer",
                        "example": 1519872608,
                        "description": "timestamp"
                      }
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/yapulsa_credit_history": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Yapulsa Internal Credit Deposit",
          "operationId": "user-yapulsa-credit-deposit-internal",
          "description": "Yapulsa Internal Credit Deposit, use for apps to show internal deposit data\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Body Value, to get credit deposit list\n",
              "schema": {
                "$ref": "#/definitions/UserListYapulsaCreditHistoryRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/YapulsaKreditListResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/give/list": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Give Credit Deposit",
          "operationId": "give-credit-deposit-internal",
          "description": "Give Credit Deposit\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Body Value, to get credit deposit list\n",
              "schema": {
                "required": [
                  "rp",
                  "q",
                  "f",
                  "p",
                  "o"
                ],
                "properties": {
                  "rp": {
                    "type": "integer",
                    "example": 25,
                    "description": "Record Per Page"
                  },
                  "q": {
                    "type": "string",
                    "example": "",
                    "description": "Query"
                  },
                  "f": {
                    "type": "object",
                    "example": {
                      "uid_to": 42
                    },
                    "description": "Filter"
                  },
                  "p": {
                    "type": "integer",
                    "example": 1,
                    "description": "Page Loaded"
                  },
                  "o": {
                    "type": "object",
                    "example": {},
                    "description": "Order by"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GiveCreditListResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/balance": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Credit Balance",
          "operationId": "user-credit-balance",
          "description": "API to get User Credit Balance , please use access_token from user id 2 or 3, user 1 is preserved for super administrator account\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserCreditBalanceResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_balance/{username}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Credit Balance",
          "operationId": "user-credit-balance",
          "description": "API to get User Credit Balance , please use access_token from user id 2 or 3, user 1 is preserved for super administrator account\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "username",
              "type": "string",
              "required": true,
              "description": "Username to check credit balance"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/app_history/{category}": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User  Cash Flow",
          "operationId": "user-cash-flow-for-apps",
          "description": "User Cash Flow\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "category",
              "type": "string",
              "required": true,
              "description": "Category to filter (all, deposit, purchase). all = all credit transaction, deposit = deposit transaction, purchase = purchase transaction\n"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowUserFromAppsRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowForAppsResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/history": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Current User Login Cash Flow",
          "operationId": "user-cash-flow",
          "description": "Current User Login Cash Flow\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowUserRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/user_history/{uid}": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Cash Flow based on UID",
          "operationId": "user-cash-flow-uid",
          "description": "User Cash Flow based on UID\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "uid",
              "type": "string",
              "required": true,
              "description": "User Id (uid) to find the data\n"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowUserRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_history": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Current Merchant On User Cash Flow",
          "operationId": "merchant-cash-flow",
          "description": "Merchant Cash Flow\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankCashFlowResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_add_deposit": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Add Deposit For Admin",
          "operationId": "user-admin-add-deposit",
          "description": "User Add Deposit By Admin, please use access_token from user id 1 as super administrator, and try to add deposit to user id 2 or 3, user_to id is always 1 (as a super administrator)\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "required": [
                  "uid_to",
                  "trx_amount",
                  "trx_notes"
                ],
                "properties": {
                  "uid_to": {
                    "type": "integer",
                    "example": 2,
                    "description": "User Id To Toped Up"
                  },
                  "trx_amount": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Amount to topuped"
                  },
                  "trx_notes": {
                    "type": "string",
                    "example": "Deposit Untuk Sadmin",
                    "description": "Transaction Notes"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankAdminAddResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_add_deposit_buy_product": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Regular transaction Add (Mobile & Data)",
          "description": "Reguler transaction Add (Mobile & Data)\n",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/TransactionDataReguler"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TransactionDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_add_deposit_by_username": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Add Deposit For Admin",
          "operationId": "user-admin-add-deposit",
          "description": "User Add Deposit By Admin, please use access_token from user id 1 as super administrator, and try to add deposit to user id 2 or 3, user_to id is always 1 (as a super administrator)\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "required": [
                  "username_from",
                  "username_to",
                  "trx_amount"
                ],
                "properties": {
                  "username_from": {
                    "type": "string",
                    "example": 342391,
                    "description": "Username From Toped Up"
                  },
                  "username_to": {
                    "type": "string",
                    "example": 342391,
                    "description": "Username To Toped Up"
                  },
                  "trx_amount": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Amount to topuped"
                  },
                  "trx_notes": {
                    "type": "string",
                    "example": "Deposit Untuk Sadmin",
                    "description": "Transaction Notes"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankAdminAddResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/add_deposit": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Add Deposit For Current User Login",
          "operationId": "user-add-deposit",
          "description": "User Add Deposit By Current User Login, please use access_token from current user login, and try to add deposit to user id 2 or 3, user_to id is user id from current user login. Current User balance will be deducted by value deposited\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "required": [
                  "uid_to",
                  "trx_amount"
                ],
                "properties": {
                  "uid_to": {
                    "type": "integer",
                    "example": 2,
                    "description": "User Id To Toped Up"
                  },
                  "trx_amount": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Amount to topuped"
                  },
                  "trx_notes": {
                    "type": "string",
                    "example": "Deposit Untuk User Lain dari User Login",
                    "description": "Transaction Notes"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankAdminAddResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/add_deposit_with_pin": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Add Deposit For Current User Login (with PIN)",
          "operationId": "user-add-deposit",
          "description": "User Add Deposit By Current User Login, please use access_token from current user login, and try to add deposit to user id 2 or 3, user_to id is user id from current user login. Current User balance will be deducted by value deposited\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "required": [
                  "pin",
                  "uid_to",
                  "trx_amount"
                ],
                "properties": {
                  "pin": {
                    "type": "string",
                    "example": "123456",
                    "description": "User PIN"
                  },
                  "uid_to": {
                    "type": "integer",
                    "example": 2,
                    "description": "User Id To Toped Up"
                  },
                  "trx_amount": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Amount to topuped"
                  },
                  "trx_notes": {
                    "type": "string",
                    "example": "Deposit Untuk User Lain dari User Login",
                    "description": "Transaction Notes"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PiggyBankAdminAddResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/cancel/{did}": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Cancel Deposit",
          "operationId": "user-cancel-deposit",
          "description": "User Cancel Deposit\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "did",
              "type": "string",
              "required": true,
              "description": "Deposit Id that get from {{local_server}}/api/v1/user/credit/give/list endpoind\n"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value\n",
              "schema": {
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "test refund deposit",
                    "description": "Reason ro Cancel / Refund Deposit"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GiveCreditListResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/location": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - User Location",
          "operationId": "user-location",
          "description": "Update User Location",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to update location\n",
              "schema": {
                "$ref": "#/definitions/UserLocationRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/use_pin": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Use Pin/Password",
          "operationId": "user-use-pin",
          "description": "Update User use pin/password transaction state",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change use pin state for transaction\n",
              "schema": {
                "$ref": "#/definitions/UserUsePinRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/change_password": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Change Password/PIN",
          "operationId": "user-change-password",
          "description": "Change User Password/PIN",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change password\n",
              "schema": {
                "$ref": "#/definitions/UserChangePasswordRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/change_username/{user_id}": {
        "put": {
          "tags": [
            "user"
          ],
          "summary": "USER - Change Username or Phone Number",
          "operationId": "user-change-credentials",
          "description": "Change Username or Phone Number",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "in": "path",
              "name": "user_id",
              "type": "integer",
              "format": "int32",
              "required": true,
              "description": "User Id (uid) to find the data\n"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change user credentials.\n At least one parameter must be provided.",
              "schema": {
                "$ref": "#/definitions/UserChangeCredentialRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            },
            "422": {
              "description": "One of these reason:\n- Update data Not Found.\n- User username already exist"
            }
          }
        }
      },
      "/user/admin_change_password": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Change Password/PIN For Admin",
          "operationId": "admin-change-password",
          "description": "Change User Password/PIN For Admin",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to change password\n",
              "schema": {
                "$ref": "#/definitions/UserAdminChangePasswordRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/custom_add_user": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Custom Add User/PIN",
          "operationId": "user-custom-add-user",
          "description": "Change User Password/PIN",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Form Body Value, to Custom Add User\n",
              "schema": {
                "$ref": "#/definitions/UserCustomAddRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomAddUserResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            },
            "422": {
              "description": "UNPROCESSABLE ENTITY"
            }
          }
        }
      },
      "/user/update_upline_margin": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Update Upline Margin",
          "operationId": "update-upline-margin",
          "description": "Update Upline Margin",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Form Body Value, to Custom Add User\n",
              "schema": {
                "required": [
                  "uid",
                  "upline_margin_percentage"
                ],
                "properties": {
                  "uid": {
                    "type": "integer",
                    "example": 123,
                    "description": "Uid Downline"
                  },
                  "upline_margin_percentage": {
                    "type": "integer",
                    "example": 1,
                    "description": "Upline Margin Percentage"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/seller_add_employee": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "USER - Seller Add Employee",
          "operationId": "user-seller-add-Employee",
          "description": "Seller Add Employee",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Form Body Value, to Custom Add User\n",
              "schema": {
                "required": [
                  "username",
                  "phonenumber",
                  "password",
                  "fullname",
                  "email"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": 175221422,
                    "description": "Username for login"
                  },
                  "phonenumber": {
                    "type": "string",
                    "example": 342391,
                    "description": "Phone Number will be username"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456",
                    "description": "User Password/PIN"
                  },
                  "fullname": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master Dealer Name"
                  },
                  "email": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master Dealer Name"
                  },
                  "address": {
                    "type": "string",
                    "example": "kepanjen",
                    "description": "Seller/Master Address"
                  },
                  "postal_code": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master Postal code"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/seller_edit_employee/{user_id}": {
        "put": {
          "tags": [
            "user"
          ],
          "summary": "USER - Seller Edit Employee",
          "operationId": "user-seller-edit-Employee",
          "description": "Seller Edit Employee",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "type": "integer",
              "required": true,
              "description": "User ID to Edit."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Form Body Value, to Custom Add User\n",
              "schema": {
                "required": [
                  "username",
                  "phonenumber",
                  "password",
                  "fullname",
                  "email"
                ],
                "properties": {
                  "phonenumber": {
                    "type": "string",
                    "example": 342391,
                    "description": "Phone Number will be username"
                  },
                  "fullname": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master Dealer Name"
                  },
                  "email": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master Dealer Name"
                  },
                  "address": {
                    "type": "string",
                    "example": "kepanjen",
                    "description": "Seller/Master Address"
                  },
                  "postal_code": {
                    "type": "string",
                    "example": "123456",
                    "description": "Seller/Master postal code"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/list": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "User list",
          "operationId": "user-list",
          "description": "User List\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Body Value, to get user list\n",
              "schema": {
                "$ref": "#/definitions/ListRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserListResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Master - user Add New",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserAddDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/add": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Master - user Add New (with role)",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserDataWithRole"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserAddDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/{userid}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Gets a user by ID.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        },
        "put": {
          "tags": [
            "user"
          ],
          "summary": "Update a user by ID.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserUpdateData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "summary": "Delete a user by ID.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/GeneralDeletedResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/firebase/token": {
        "put": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Update FCM Token fro current Login User.",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserFCMTokenUpdateData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/firebase/token/{userid}": {
        "put": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Update FCM Token fro uid User given in url.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserFCMTokenUpdateData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/firebase/notif/information": {
        "post": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Send FCM to Multiple User.",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/MultipleUserFCMNotifData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/firebase/notif/product_status": {
        "post": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Send FCM to Multiple User.",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/MultipleUserFCMNotifDataProductStatus"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/firebase/notif/information/{userid}": {
        "post": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Send FCM to specific user id.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SingleUserFCMNotifData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/credit/admin_add_bulk_deposit": {
        "post": {
          "tags": [
            "bulk_deposit"
          ],
          "summary": "USER - User Bulk Add Deposit For Admin",
          "operationId": "user-admin-bulk-add-deposit",
          "description": "User Bulk Add Deposit By Admin\n",
          "consumes": [
            "multipart/form-data"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "order_id",
              "in": "formData",
              "description": "Order ID",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "cluster_id",
              "in": "formData",
              "description": "Cluster ID",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "csv_file",
              "in": "formData",
              "description": "CSV File (without-header; column names: `username_to`, `trx_amount`, `trx_notes`).\n Example: https://pastebin.com/2V1614ya\n\n\nData Type:\n- username_to (`string`)\n- trx_amount (`integer`)\n- trx_notes (`string`)",
              "required": true,
              "type": "file",
              "default": ""
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AdminAddBulkDepositResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_bulk_deposit/list": {
        "post": {
          "tags": [
            "bulk_deposit"
          ],
          "summary": "USER - User Bulk Deposit List",
          "operationId": "user-admin-bulk-deposit-list",
          "description": "User Bulk Deposit List\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Body Value, to get user list\n",
              "schema": {
                "$ref": "#/definitions/BulkAddDepositListRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AdminBulkDepositResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/credit/admin_bulk_deposit_detail/list": {
        "post": {
          "tags": [
            "bulk_deposit"
          ],
          "summary": "USER - User Bulk Deposit Detail List",
          "operationId": "user-admin-bulk-deposit-detail-list",
          "description": "User Bulk Deposit Detail List\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "description": "Body Value, to get user list\n",
              "schema": {
                "$ref": "#/definitions/ListRequestBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AdminBulkDepositDetailResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/user/firebase/notif/product_status/{userid}": {
        "post": {
          "tags": [
            "user_fcm"
          ],
          "summary": "Send FCM to specific user id.",
          "parameters": [
            {
              "in": "path",
              "name": "userid",
              "type": "integer",
              "required": true,
              "description": "user Id to find."
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Parameter",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SingleUserFCMNotifDataProductStatus"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserDataResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            }
          }
        }
      },
      "/user/payment_method/register": {
        "post": {
          "tags": [
            "user_payment_method"
          ],
          "summary": "USER - Payment Method Register",
          "operationId": "user-payment-method-register",
          "description": "User Payment Method registration\n",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Request Content Type",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "application/json"
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization JWT Token",
              "required": true,
              "type": "string",
              "format": "string",
              "default": "Bearer xxx.yyy.zzz"
            },
            {
              "name": "Body Parameter",
              "in": "body",
              "required": true,
              "description": "Form Body Value, to make Login Process\n",
              "schema": {
                "$ref": "#/definitions/PaymentMethodRegistrationRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PaymentMethodRegistrationResponse"
              }
            },
            "401": {
              "description": "UNAUTHORIZED"
            },
            "403": {
              "description": "FORBIDDEN"
            }
          }
        }
      },
      "/business_type/user/list": {
          "post": {
              "tags": [
                  "business_type"
              ],
              "summary": "USER - User Get All Business Types",
              "operationId": "user-get-all-business-type",
              "description": "User Get All Business Types\n",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "name": "Content-Type",
                      "in": "header",
                      "description": "Request Content Type",
                      "required": true,
                      "type": "string",
                      "format": "string",
                      "default": "application/json"
                  },
                  {
                      "name": "Authorization",
                      "in": "header",
                      "description": "Authorization JWT Token",
                      "required": true,
                      "type": "string",
                      "format": "string",
                      "default": "Bearer xxx.yyy.zzz"
                  },
                  {
                      "name": "Body Parameter",
                      "in": "body",
                      "description": "Body Value, to get user business list\n",
                      "schema": {
                          "$ref": "#/definitions/BusinessTypeListRequestBody"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/BusinessTypeListResponse"
                      }
                  },
                  "401": {
                      "description": "UNAUTHORIZED"
                  },
                  "403": {
                      "description": "FORBIDDEN"
                  }
              }
          }
      }
    },
    "definitions": {
      "ResponseMessage": {
        "properties": {
          "title": {
            "type": "string",
            "example": "SUCCESS",
            "description": "Response Message Title"
          },
          "body": {
            "type": "string",
            "example": "SUCCESS",
            "description": "Response Message Body"
          }
        }
      },
      "GeneralResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {}
        }
      },
      "GeneralDeletedResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "type": "string",
            "example": "Deleted"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "sadmin",
            "description": "Phone Number / username to Login."
          },
          "password": {
            "type": "string",
            "example": "aQsWdEfR123456",
            "description": "Password to Login."
          }
        }
      },
      "TransferDownlineRequest": {
        "required": [
          "upline_uid_from",
          "upline_uid_to"
        ],
        "properties": {
          "upline_uid_from": {
            "type": "integer",
            "example": 1,
            "description": "Source Upline-User"
          },
          "upline_uid_to": {
            "type": "integer",
            "example": 2,
            "description": "Target Upline-User"
          }
        }
      },
      "RequetsChangePasswordOTPRequest": {
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": 42642,
            "description": "username to change password."
          }
        }
      },
      "ChangePasswordOTPRequest": {
        "required": [
          "username",
          "otp",
          "new_password",
          "new_password_confirm"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": 42642,
            "description": "username to change password."
          },
          "otp": {
            "type": "string",
            "example": "18292",
            "description": "otp code."
          },
          "new_password": {
            "type": "string",
            "example": "aQsWdEfR123456",
            "description": "New password."
          },
          "new_password_confirm": {
            "type": "string",
            "example": "aQsWdEfR123456",
            "description": "Confirm new password."
          }
        }
      },
      "LoginResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/LoginResponseData"
          }
        }
      },
      "LoginResponseData": {
        "properties": {
          "access_token": {
            "type": "string",
            "example": "xxxx.xxxxx.xxxxx",
            "description": "Access Token"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "area_name": {
            "type": "string",
            "example": "INDRAGIRI AREA",
            "description": "Area Name"
          },
          "area_provinsi": {
            "type": "string",
            "example": "Sumatra Barat",
            "description": "Province/State Name"
          },
          "area_kabupaten": {
            "type": "string",
            "example": "Kota Padang",
            "description": "District/City Name"
          },
          "area_kecamatan": {
            "type": "string",
            "example": "Padang Utara",
            "description": "Sub-District Level-1 Name"
          },
          "area_kelurahan": {
            "type": "string",
            "example": "Ulak Karang Utara",
            "description": "Sub-District Level-2 Name"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "last_loggedin_at": {
            "type": "string",
            "example": "2017-07-10 09:55:21",
            "description": "Last Logged In Date"
          },
          "first_loggedin_at": {
            "type": "string",
            "example": "2017-07-10 09:55:21",
            "description": "First Logged In Date"
          },
          "first_deposit_at": {
            "type": "string",
            "example": "2017-07-10 09:55:21",
            "description": "First Deposit In Date"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "parent_area_name": {
            "type": "string",
            "example": "INDRAGIRI AREA",
            "description": "Area Name"
          },
          "partner_id": {
            "type": "integer",
            "example": 2,
            "description": "Partner ID"
          },
          "partner_name": {
            "type": "string",
            "example": "PT ABC",
            "description": "Partner Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "refresh_token": {
            "type": "string",
            "example": "xxxx.xxxxx.xxxxx",
            "description": "Refresh Token"
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "8",
              "9"
            ],
            "description": "User Role"
          },
          "uid": {
            "type": "integer",
            "example": 1,
            "description": "User ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "meta": {
            "type": "object",
            "description": "Meta Data (each payment-method has it own specific meta data)",
            "example": {
              "pm_va_bca": "1049412345678901",
              "pm_va_mandiri": "1049409876543210",
              "pm_va_bni": "1049412312345674",
              "pm_va_permata": "1049498769876543"
            }
          }
        }
      },
      "RefreshTokenResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/RefreshTokenResponseData"
          }
        }
      },
      "RefreshTokenResponseData": {
        "properties": {
          "access_token": {
            "type": "string",
            "example": "xxxx.xxxxx.xxxxx",
            "description": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "example": "xxxx.xxxxx.xxxxx",
            "description": "Refresh Token"
          }
        }
      },
      "LogoutResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/LogoutResponseData"
          }
        }
      },
      "LogoutResponseData": {
        "properties": {
          "msg": {
            "type": "string",
            "example": "Successfully logged out",
            "description": "Logout message"
          }
        }
      },
      "ProfileResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/ProfileResponseData"
          }
        }
      },
      "ProfileUpdateResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/ProfileResponseData"
          }
        }
      },
      "ProfileResponseData": {
        "properties": {
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "area_name": {
            "type": "string",
            "example": "INDRAGIRI AREA",
            "description": "Area Name"
          },
          "area_provinsi": {
            "type": "string",
            "example": "Sumatra Barat",
            "description": "Province/State Name"
          },
          "area_kabupaten": {
            "type": "string",
            "example": "Kota Padang",
            "description": "District/City Name"
          },
          "area_kecamatan": {
            "type": "string",
            "example": "Padang Utara",
            "description": "Sub-District Level-1 Name"
          },
          "area_kelurahan": {
            "type": "string",
            "example": "Ulak Karang Utara",
            "description": "Sub-District Level-2 Name"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "cluster_name": {
            "type": "string",
            "example": "Cilacap",
            "description": "Cluster Name"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "visit_status": {
            "type": "integer",
            "example": 1,
            "description": "visit status"
          },
          "last_visited_at": {
            "type": "string",
            "example": "2018-07-23T10:43:34",
            "description": "last visited"
          },
          "first_loggedin_at": {
            "type": "string",
            "example": "2018-07-23T10:43:34",
            "description": "First visited"
          },
          "first_deposit_at": {
            "type": "string",
            "example": "2018-07-23T10:43:34",
            "description": "First deposit"
          },
          "is_fully_registered": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user is fully registered or not"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "join_date": {
            "type": "string",
            "example": "2019-01-15 15:44:26",
            "description": "Join Date"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "kredit_balance": {
            "properties": {
              "credit_balance": {
                "type": "integer",
                "example": 1000,
                "description": "User Credit Balance"
              },
              "debit_balance": {
                "type": "integer",
                "example": 1000,
                "description": "User Debit Balance"
              },
              "total_balance": {
                "type": "integer",
                "example": 1000,
                "description": "User Total Balance"
              }
            }
          },
          "last_loggedin_at": {
            "type": "integer",
            "example": "2017-07-10 09:55:21",
            "description": "Last Logged In Date"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "margin_balance": {
            "type": "integer",
            "example": 0,
            "description": "Margin Balance"
          },
          "parent_area_name": {
            "type": "string",
            "example": "INDRAGIRI",
            "description": "Parent Area Name"
          },
          "partner_id": {
            "type": "integer",
            "example": 2,
            "description": "Partner ID"
          },
          "partner_name": {
            "type": "string",
            "example": "PT. ABC",
            "description": "Partner Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "profile_alphapay": {
            "properties": {
              "created_at": {
                "type": "string",
                "example": "2019-01-11 17:27:55",
                "description": "Created Date"
              },
              "has_business_place": {
                "type": "integer",
                "example": 1,
                "description": "Has Business Place"
              },
              "is_main_business": {
                "type": "integer",
                "example": 0,
                "description": "Is Main Business"
              },
              "outlet_name": {
                "type": "string",
                "example": "Toko Jaya Abadi",
                "description": "Outlet Name"
              },
              "type_of_business": {
                "type": "string",
                "example": "Toko Kelontong",
                "description": "Type of Business"
              },
              "updated_at": {
                "type": "string",
                "example": "2019-01-15 16:58:08",
                "description": "Updated Date"
              }
            }
          },
          "role": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "8",
              "9"
            ],
            "description": "User Role"
          },
          "role_id": {
            "type": "integer",
            "example": 8,
            "description": "Role ID"
          },
          "role_name": {
            "type": "string",
            "example": "SELLER",
            "description": "Role Name"
          },
          "uid": {
            "type": "integer",
            "example": 1,
            "description": "User ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "upline_user": {
            "properties": {
              "fullname": {
                "type": "string",
                "example": "Jack Doe",
                "description": "User Upline Fullname"
              },
              "phonenumber": {
                "type": "string",
                "example": 1402433619,
                "description": "User Upline Phone Number"
              },
              "photo_filename": {
                "type": "string",
                "example": "http://www.yapulsa.com/file/photo/image123.jpg",
                "description": "Upline User Photo Filename"
              }
            }
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "plafon_status": {
            "type": "integer",
            "example": 1,
            "description": "Plafon Status (0: not-eligible; 1: eligible; 2: incomplete; 3: on-review; 4: on-going; 5: blocked) "
          },
          "outlet_photo": {
            "type": "string",
            "example": "http://www.image.com/saya.jpg",
            "description": "url image outlet"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          },
          "ktp_number": {
            "type": "string",
            "example": "112989811123213",
            "description": "KTP Number"
          },
          "meta": {
            "type": "object",
            "description": "Meta Data (each payment-method has it own specific meta data)",
            "example": {
              "pm_va_bca": "1049412345678901",
              "pm_va_mandiri": "1049409876543210",
              "pm_va_bni": "1049412312345674",
              "pm_va_permata": "1049498769876543"
            }
          }
        }
      },
      "CustomAddUserResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/ProfileResponseData"
          }
        }
      },
      "MixpanelResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/MixpanelResponseData"
          }
        }
      },
      "MixpanelResponseData": {
        "properties": {
          "created_at": {
            "type": "string",
            "example": "2018-05-08 11:51:36",
            "description": "Created date"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": 25000,
            "description": "sell price"
          },
          "customer_number": {
            "type": "string",
            "example": 175301121,
            "description": "Customer number"
          },
          "order_id": {
            "type": "string",
            "example": "YPDTRX-Sepulsa|SPL-15677",
            "description": "Transaction id"
          },
          "phone_number": {
            "type": "string",
            "example": 175301121,
            "description": "Phone number"
          },
          "product_name": {
            "type": "string",
            "example": "VC-Garena",
            "description": "Product name"
          },
          "product_type_name": {
            "type": "string",
            "example": "voucher game",
            "description": "Product type name"
          },
          "product_value": {
            "type": "integer",
            "example": 25000,
            "description": "Product value"
          },
          "status_name": {
            "type": "string",
            "example": "Success",
            "description": "status"
          },
          "total_rev": {
            "type": "integer",
            "example": 25000,
            "description": "total revenue success"
          },
          "total_trx": {
            "type": "integer",
            "example": 1,
            "description": "total trx success"
          }
        }
      },
      "UserUpdateRequest": {
        "required": [
          "fullname",
          "email"
        ],
        "properties": {
          "fullname": {
            "type": "string",
            "example": "John Doe",
            "description": "Fullname"
          },
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com",
            "description": "Email"
          },
          "photo_filename": {
            "type": "string",
            "example": "profile.is_password_changed",
            "description": "Photo filename"
          },
          "address": {
            "type": "string",
            "example": "123 Four Street",
            "description": "Address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "Postal Code"
          },
          "photo_base64": {
            "type": "string",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAK8AAACvCAYAAACLko51AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwA",
            "description": "Photo base64"
          },
          "area_id": {
            "type": "integer",
            "example": 1,
            "description": "Area ID"
          },
          "outlet_photo": {
            "type": "string",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAALdklEQVR4nO2dfYwd1XnGf8+wXjmORd0Va9+Zaygi1CKBqCiqaEVTklILDHHTiJKAmjagKoACIsS1wEmlFFUoQilKjEXSj8SpVERIgk1Fi4UQaojVBhIlbooIJYQSq3Xjmdn1snXRxqx3787TP+7M3rvrux93793diz0/aeV75uN935nnfMyZOecYSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpK5sd2tNoxlOTY/jPbr2dZ9q7VjuWMJxej4GdZlq1f7ZjOWGaJYdvOsuzLqx3XGYntT88WI2fS9oWrHd8ZxTxiFJSlZKVYhBi2/X+21652rKc9tu9ZhBgF1652vKc1bYph2/evdsynLUsQw1mW/eNqx31ashQxcn642rGfdtj+0yWKYdv/0crmyMhIEMfJlpW+loUIVjuAhbD9R8AXOjAxMXvDyMhIMDEx+XXQ947GyUUd2O46PS2I7V8Hvtahmbg5MS2GdCNiAHj8aJKs69BH1+hZQWz3AV8F+js09UrxY4YYOZLeJeveDn10jZ4VBLgZuLQLdr4HrcWYRnzqaJKc3wVfHdOTgtgOgF1dMDVh+5l5xajTL9jZBX8d05OCAFuBjl8M2n5idHR0bAExcnTj8PBwX6c+O6VXBfn9LtjIbD+wODEAOGeyNnV5F/x2RK8K8v5ODdh+JB0a3rlIMXJ0Rad+O2XVi+hssizrAzrqsNmOh4ZHKpKuavPMizvx2w16roRI2kxnGaU2+r/HJ+ysTTFAotKB367QcyXE9lpJSzmPkydPMjZ2ojZZmzx/ad616h3EnhOkNjXVd1YQEASLK7y1Wo3x8ZOcePPNbGpqKgOW/kHKjC/53C7Rc4KM/eIXI+NvjrNmzRrWrOmjr6+PQIK81Ngmm8qYrE0yMTFJNpWByICMDq/HkHbhEjqi5wQZ2LAhTdKh8cnJybWTk5MtjzEgG6SMRu3W8bUIv9qpjU7puUYdwPYhA7h+8xs76v8Iaki1fGtAl67D0nPdsNMJPSmIFDwuyBCIejUF1BATwDj10tBHF+O3faIv0L90y95S6U1BYC9mbDpdbz/6qL/5XZZRJJL2b9q06cRy2G6HnhSkUtk4ZvlvVsyhnYE/v2L+5qEnBcm5HxhdCUcWe6MwfHklfC1EzwpSDcPjwJ3L7cf2kYDgM8vtZ7H0rCAAUVh51F7OqssnQDeE4aYVKYmLoacFAfD6t99h+9HuG2bc6MPVqPL9rtvugJ4XZPPZZ2fr3rb2jw0PdsumYQR8TTWsPNUtm92i/bd4q0gcpx80PCRx3lJt2P4nwSeiKIwXPnrleUsJAhDH8TpLt8vagWhjPqGfBd0XhZWDyxZcF3jLCVIwPDzcNzmVbZV9NdJl4EtAZ0PRs9cRyS9gnkP6hyisvLbKIS+Kt6wgrUiGhtbZrF1zVvDG4OBgbeEzSkpKSkpKSkpKSkpKSkp6jHl76ra30Bhec1jSnAPJXF+nakOefFWNUSGLJp81VYzrPS5pWV4A5pNzWo5SlHUkiipjrfatBHMKYvtC2z+VFOTpXUEQ/OVcx2dZ9veSPpYnQ0ltDzqzvREYypMPS7qpXRuLIU7SbwNXzhHFBNajxvdWo/DIcvifj/m+h+woxACQdGeeg09z1I+4Gfi3OEm7MaWuLVre4CzLBqjP8WtmM3Aj8Mgyx7SSZND0idisR1wFqkg6B3gyTYcvrlQ2vrFSAbUURNLtNOrYJ4AP5b932n5kKaPTexFDVg3DO5q3HU3TtWTeJ2k7sHkqm9oJrNgs3VMEcX05oyLIceAWYAC4gvqs2K3APy9k2Pal+bkA3wLOB26iPnewD3jB9p4gCJ6Zy0aWZdsk7bR9kaSa7aclfU7Sz1v4i2x/QtKVwHnUhxA9DewGPpsf9mNJ8w6aqFYq40fT9CZnJBL9wLU0CZIk6Rbj20BX2N6MNCx7H+ibyDvqwfAdRAx8tJ7kuWoYthwXECfJAHBfftzIKVnd9p/QmKz/FUm32d4OPJnvfzoIgmta3LwZjTpwOfB4fs5IXgW0Yi9wh6SJWY36KPWMMDu+UeDqIAgONW3bTl30Vk9OI0Dh+4Ck3ysadUOtGlbWtArqaJz+VGKLTVyNKlWAOE5vB+9BOjUj12/mOXniQYv7gP8WrDeMBujcMDx1ZOTRJPlzob/IL+TeGY16Poa2mB6c0VjS4inyCfiSttm+pNVFzEWTGBlwmJmrK3wc+FyL0woxxoBXbNdyWwOSvmG7P4/5EmAfDTEy24eBohTNlRHmJEmG1iM21/3VB+vFSboN/FCTGDXDa7aHATTLTzWsjAJ/l+8byDP6DOJ4aJ2sOwEMY4gvzRbkWqBYYvWApFfzm5BRL/oFS5nT/RhQlfQOoEq9+prI/X7KrddH/KLtX5b0TknvBIrpAhfSaNceoDHe9wDwK0EQvEPSucAN0N4kHNsY71YusM2zr7/+emB7D40uwF7BYDWs/Orb170tNN5BPbPNtra7yEjgnUmSzCxZym5GdSFl9kZhODpDEEk7mpIPzLL+MDCc//5D2+3Mx3sJ+GjRN5GEpIdt35un+4DrZ1yK/ZLtu4MgKErGa8BtTYf8Tl7FFXMJXwH+oLl9kfQYsOCoxDRN++M4uT1OknuSNH2OeqkFPCGxZ/zk5GWStgAYPxOFlVvCsHIcYMOGDVk1DB+c8bSWUw3D/0I8lgdzfmY+Uuw7duxYgFVk7Bpku6GpH5I3wlvz5A8kfbfZeN5LLxaV7Ld910IX2sS+Vj13Sc0N3btn7X4xCILZua653dho+6Kma3hC0ikr/wDfXCi4qcwfQvoy6POgywEM46AborByWGJ6xSChb7V6yrT5RivbguZB3HfnzQITk7XrERfkvh6NougIzOwYNldD67Is29f0d0++/a+AEwCSbrW92MWKj8+xvfkGzijOc7x6qTXtnz1Rp5UYsJgB21JzycP4u8BvRGHliXzLwn6sln6iMHzR9ac9JF0aJ0NX2UbSLqhXkULTtVFRJ26GRnECLpF0fdPffbYjSSPkDRX1RveUhqpNmqcutz2dLK/GALC9rch97TA6Ohpg/7Xhw7Y/AJxbDcPfroaVFxu2Odx0ygfadmJP33DhXUmabgXeU09zIAo3vVTsLwS5k/mXQeoHduTH7ibPqbbvyheKWUKMvpKZC5O1vTZi3l4cyn9fBtzf7uudgYGBrBqF+6thZX81Cp+KwsopfRzR97ztNI/7xjhJbm1H/GoUPgv+UR70lTYPFfsszVikM7C9XtKtefoN4JfUmrsBgiA4DOzPb8IFwHWLDcz2F2zvs/3vwLdpPCo+JunQPKfOxy4aTzifBv7H9pO2/9Vd+p8SomhwAvRZKGZz6W+TdOhncZI+GcfJd9I0XXBWl91oSyRdVN/m56th5fnm4wLqTxQb8gP2SlrwvY3t5px992IuKr85n6T+NNX80u4HzHx6agtJzwJ30WhfKsB24L10XqVOU40qe7G/2LTpAmA70vunvHCm7F/Ttx98eOZWnbKEbQD8GnAQOChpz2KCy3vJe/PzTti+QNJPCju0bvjeQ97A5s/mP7K9A3ifpKLRn2iy8ZPZBmxnTfun611JXwJ+i3rjWQiTARe3Pscvgg8KtzXJM4rCncA1Nt8vqizbNdnvlhgDH8z//nP2uYODgxmoUVXZL2fhpgPt+O8I29c1rQz6yabt5+QLzCyX37X5I/GyLpORpsfWJ0myMTl2bFGTUG0Tx8m+OEkdJ6njOGlZelf8+0b+pLac9sdps3e+FCqVwTFgwS+LcZKeB74uTtKrJW0DwP65zwpavmw8Az44rTb+COiBoi9pmJB0S3XTppaZpudnUL3lsd43/RMfAn43CitPz3X4sn1psr3Z9m8CSHqhuRN3JhHH6bXGfYKXoyg8I+9BSUlJSUlJSUlJSUlJSUlJSUlJSUlJySrz/1OrXZhY6sNJAAAAAElFTkSuQmCC",
            "description": "Base64 photo"
          },
          "outlet_name": {
            "type": "string",
            "example": "Toko Jaya Abadi",
            "description": "Outlet Name"
          },
          "has_business_place": {
            "type": "integer",
            "example": 1,
            "description": "Has Business Place"
          },
          "type_of_business": {
            "type": "string",
            "example": "Toko Kelontong",
            "description": "Type of Business"
          },
          "is_main_business": {
            "type": "integer",
            "example": 0,
            "description": "Is Main Business"
          }
        }
      },
      "UserUsePinRequest": {
        "required": [
          "use_pin",
          "password"
        ],
        "properties": {
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use pin/password enable 1 or disable 0"
          },
          "password": {
            "type": "string",
            "example": "1234567",
            "description": "Password"
          }
        }
      },
      "UserChangePasswordRequest": {
        "required": [
          "old_password",
          "password"
        ],
        "properties": {
          "old_password": {
            "type": "string",
            "example": "123456",
            "description": "New Password"
          },
          "password": {
            "type": "string",
            "example": "1234567",
            "description": "New Password"
          }
        }
      },
      "UserChangeCredentialRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "unique username",
            "minLength": 6,
            "maxLength": 50
          },
          "phonenumber": {
            "type": "string",
            "description": "phone number",
            "example": 2739128,
            "minLength": 6,
            "maxLength": 30
          }
        }
      },
      "UserAdminChangePasswordRequest": {
        "required": [
          "username",
          "password",
          "is_password_changed"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": 22323885,
            "description": "User Name"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "New Password"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          }
        }
      },
      "UserCustomAddRequest": {
        "required": [
          "phonenumber",
          "password",
          "fullname",
          "email",
          "area_id",
          "role_id"
        ],
        "properties": {
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number will be username"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "User Password/PIN"
          },
          "fullname": {
            "type": "string",
            "example": "John Doe",
            "description": "Seller/Master Dealer Name"
          },
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com",
            "description": "Seller/Master Dealer Name"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 1,
            "description": "Cluster ID"
          },
          "role_id": {
            "type": "integer",
            "example": 1,
            "description": "Role ID/User Type"
          },
          "upline_margin_percentage": {
            "type": "integer",
            "example": 1,
            "description": "Upline margin percentage"
          },
          "outlet_photo": {
            "type": "string",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAALdklEQVR4nO2dfYwd1XnGf8+wXjmORd0Va9+Zaygi1CKBqCiqaEVTklILDHHTiJKAmjagKoACIsS1wEmlFFUoQilKjEXSj8SpVERIgk1Fi4UQaojVBhIlbooIJYQSq3Xjmdn1snXRxqx3787TP+7M3rvrux93793diz0/aeV75uN935nnfMyZOecYSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpK5sd2tNoxlOTY/jPbr2dZ9q7VjuWMJxej4GdZlq1f7ZjOWGaJYdvOsuzLqx3XGYntT88WI2fS9oWrHd8ZxTxiFJSlZKVYhBi2/X+21652rKc9tu9ZhBgF1652vKc1bYph2/evdsynLUsQw1mW/eNqx31ashQxcn642rGfdtj+0yWKYdv/0crmyMhIEMfJlpW+loUIVjuAhbD9R8AXOjAxMXvDyMhIMDEx+XXQ947GyUUd2O46PS2I7V8Hvtahmbg5MS2GdCNiAHj8aJKs69BH1+hZQWz3AV8F+js09UrxY4YYOZLeJeveDn10jZ4VBLgZuLQLdr4HrcWYRnzqaJKc3wVfHdOTgtgOgF1dMDVh+5l5xajTL9jZBX8d05OCAFuBjl8M2n5idHR0bAExcnTj8PBwX6c+O6VXBfn9LtjIbD+wODEAOGeyNnV5F/x2RK8K8v5ODdh+JB0a3rlIMXJ0Rad+O2XVi+hssizrAzrqsNmOh4ZHKpKuavPMizvx2w16roRI2kxnGaU2+r/HJ+ysTTFAotKB367QcyXE9lpJSzmPkydPMjZ2ojZZmzx/ad616h3EnhOkNjXVd1YQEASLK7y1Wo3x8ZOcePPNbGpqKgOW/kHKjC/53C7Rc4KM/eIXI+NvjrNmzRrWrOmjr6+PQIK81Ngmm8qYrE0yMTFJNpWByICMDq/HkHbhEjqi5wQZ2LAhTdKh8cnJybWTk5MtjzEgG6SMRu3W8bUIv9qpjU7puUYdwPYhA7h+8xs76v8Iaki1fGtAl67D0nPdsNMJPSmIFDwuyBCIejUF1BATwDj10tBHF+O3faIv0L90y95S6U1BYC9mbDpdbz/6qL/5XZZRJJL2b9q06cRy2G6HnhSkUtk4ZvlvVsyhnYE/v2L+5qEnBcm5HxhdCUcWe6MwfHklfC1EzwpSDcPjwJ3L7cf2kYDgM8vtZ7H0rCAAUVh51F7OqssnQDeE4aYVKYmLoacFAfD6t99h+9HuG2bc6MPVqPL9rtvugJ4XZPPZZ2fr3rb2jw0PdsumYQR8TTWsPNUtm92i/bd4q0gcpx80PCRx3lJt2P4nwSeiKIwXPnrleUsJAhDH8TpLt8vagWhjPqGfBd0XhZWDyxZcF3jLCVIwPDzcNzmVbZV9NdJl4EtAZ0PRs9cRyS9gnkP6hyisvLbKIS+Kt6wgrUiGhtbZrF1zVvDG4OBgbeEzSkpKSkpKSkpKSkpKSkp6jHl76ra30Bhec1jSnAPJXF+nakOefFWNUSGLJp81VYzrPS5pWV4A5pNzWo5SlHUkiipjrfatBHMKYvtC2z+VFOTpXUEQ/OVcx2dZ9veSPpYnQ0ltDzqzvREYypMPS7qpXRuLIU7SbwNXzhHFBNajxvdWo/DIcvifj/m+h+woxACQdGeeg09z1I+4Gfi3OEm7MaWuLVre4CzLBqjP8WtmM3Aj8Mgyx7SSZND0idisR1wFqkg6B3gyTYcvrlQ2vrFSAbUURNLtNOrYJ4AP5b932n5kKaPTexFDVg3DO5q3HU3TtWTeJ2k7sHkqm9oJrNgs3VMEcX05oyLIceAWYAC4gvqs2K3APy9k2Pal+bkA3wLOB26iPnewD3jB9p4gCJ6Zy0aWZdsk7bR9kaSa7aclfU7Sz1v4i2x/QtKVwHnUhxA9DewGPpsf9mNJ8w6aqFYq40fT9CZnJBL9wLU0CZIk6Rbj20BX2N6MNCx7H+ibyDvqwfAdRAx8tJ7kuWoYthwXECfJAHBfftzIKVnd9p/QmKz/FUm32d4OPJnvfzoIgmta3LwZjTpwOfB4fs5IXgW0Yi9wh6SJWY36KPWMMDu+UeDqIAgONW3bTl30Vk9OI0Dh+4Ck3ysadUOtGlbWtArqaJz+VGKLTVyNKlWAOE5vB+9BOjUj12/mOXniQYv7gP8WrDeMBujcMDx1ZOTRJPlzob/IL+TeGY16Poa2mB6c0VjS4inyCfiSttm+pNVFzEWTGBlwmJmrK3wc+FyL0woxxoBXbNdyWwOSvmG7P4/5EmAfDTEy24eBohTNlRHmJEmG1iM21/3VB+vFSboN/FCTGDXDa7aHATTLTzWsjAJ/l+8byDP6DOJ4aJ2sOwEMY4gvzRbkWqBYYvWApFfzm5BRL/oFS5nT/RhQlfQOoEq9+prI/X7KrddH/KLtX5b0TknvBIrpAhfSaNceoDHe9wDwK0EQvEPSucAN0N4kHNsY71YusM2zr7/+emB7D40uwF7BYDWs/Orb170tNN5BPbPNtra7yEjgnUmSzCxZym5GdSFl9kZhODpDEEk7mpIPzLL+MDCc//5D2+3Mx3sJ+GjRN5GEpIdt35un+4DrZ1yK/ZLtu4MgKErGa8BtTYf8Tl7FFXMJXwH+oLl9kfQYsOCoxDRN++M4uT1OknuSNH2OeqkFPCGxZ/zk5GWStgAYPxOFlVvCsHIcYMOGDVk1DB+c8bSWUw3D/0I8lgdzfmY+Uuw7duxYgFVk7Bpku6GpH5I3wlvz5A8kfbfZeN5LLxaV7Ld910IX2sS+Vj13Sc0N3btn7X4xCILZua653dho+6Kma3hC0ikr/wDfXCi4qcwfQvoy6POgywEM46AborByWGJ6xSChb7V6yrT5RivbguZB3HfnzQITk7XrERfkvh6NougIzOwYNldD67Is29f0d0++/a+AEwCSbrW92MWKj8+xvfkGzijOc7x6qTXtnz1Rp5UYsJgB21JzycP4u8BvRGHliXzLwn6sln6iMHzR9ac9JF0aJ0NX2UbSLqhXkULTtVFRJ26GRnECLpF0fdPffbYjSSPkDRX1RveUhqpNmqcutz2dLK/GALC9rch97TA6Ohpg/7Xhw7Y/AJxbDcPfroaVFxu2Odx0ygfadmJP33DhXUmabgXeU09zIAo3vVTsLwS5k/mXQeoHduTH7ibPqbbvyheKWUKMvpKZC5O1vTZi3l4cyn9fBtzf7uudgYGBrBqF+6thZX81Cp+KwsopfRzR97ztNI/7xjhJbm1H/GoUPgv+UR70lTYPFfsszVikM7C9XtKtefoN4JfUmrsBgiA4DOzPb8IFwHWLDcz2F2zvs/3vwLdpPCo+JunQPKfOxy4aTzifBv7H9pO2/9Vd+p8SomhwAvRZKGZz6W+TdOhncZI+GcfJd9I0XXBWl91oSyRdVN/m56th5fnm4wLqTxQb8gP2SlrwvY3t5px992IuKr85n6T+NNX80u4HzHx6agtJzwJ30WhfKsB24L10XqVOU40qe7G/2LTpAmA70vunvHCm7F/Ttx98eOZWnbKEbQD8GnAQOChpz2KCy3vJe/PzTti+QNJPCju0bvjeQ97A5s/mP7K9A3ifpKLRn2iy8ZPZBmxnTfun611JXwJ+i3rjWQiTARe3Pscvgg8KtzXJM4rCncA1Nt8vqizbNdnvlhgDH8z//nP2uYODgxmoUVXZL2fhpgPt+O8I29c1rQz6yabt5+QLzCyX37X5I/GyLpORpsfWJ0myMTl2bFGTUG0Tx8m+OEkdJ6njOGlZelf8+0b+pLac9sdps3e+FCqVwTFgwS+LcZKeB74uTtKrJW0DwP65zwpavmw8Az44rTb+COiBoi9pmJB0S3XTppaZpudnUL3lsd43/RMfAn43CitPz3X4sn1psr3Z9m8CSHqhuRN3JhHH6bXGfYKXoyg8I+9BSUlJSUlJSUlJSUlJSUlJSUlJSUlJySrz/1OrXZhY6sNJAAAAAElFTkSuQmCC",
            "description": "Base64 photo"
          }
        }
      },
      "GiveCreditListResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 2
              },
              "last_page": {
                "type": "integer",
                "example": 10
              },
              "next_page": {
                "type": "integer",
                "example": 3
              },
              "per_page": {
                "type": "integer",
                "example": 5
              },
              "prev_page": {
                "type": "integer",
                "example": 1
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/GiveCreditListResponseData"
                }
              }
            }
          }
        }
      },
      "GiveCreditListResponseData": {
        "properties": {
          "created_at": {
            "type": "string",
            "example": "2017-09-07T04:51:59"
          },
          "created_by": {
            "type": "integer",
            "example": 42
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "trx_amount": {
            "type": "integer",
            "example": 999999
          },
          "trx_notes": {
            "type": "string",
            "example": "Approval From Payment System (1)"
          },
          "real_trx_notes": {
            "type": "string",
            "example": "Approval From Payment System (CANOPUS)"
          },
          "fullname_from": {
            "type": "string",
            "example": "123456"
          },
          "fullname_to": {
            "type": "string",
            "example": 1430409
          },
          "username_from": {
            "type": "string",
            "example": "callback_user"
          },
          "username_to": {
            "type": "string",
            "example": "Jember RS"
          },
          "uid_from": {
            "type": "integer",
            "example": 0
          },
          "uid_to": {
            "type": "integer",
            "example": 42
          },
          "updated_at": {
            "type": "string",
            "example": "2017-08-29T09:21:23"
          },
          "updated_by": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "YapulsaKreditListResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 2
              },
              "last_page": {
                "type": "integer",
                "example": 10
              },
              "next_page": {
                "type": "integer",
                "example": 3
              },
              "per_page": {
                "type": "integer",
                "example": 5
              },
              "prev_page": {
                "type": "integer",
                "example": 1
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/YapulsaKreditResponseData"
                }
              }
            }
          }
        }
      },
      "YapulsaKreditResponseData": {
        "properties": {
          "area_id_from": {
            "type": "integer",
            "example": 2,
            "description": "Sender Area ID"
          },
          "area_id_to": {
            "type": "integer",
            "example": 151,
            "description": "Recepient Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 1,
            "description": "Recepient Cluster ID"
          },
          "cluster_name": {
            "type": "string",
            "example": "Jakarta",
            "description": "Recepient Cluster Name"
          },
          "created_at": {
            "type": "string",
            "example": "2017-09-07T04:51:59",
            "description": "Created At (Format: `datetime`)"
          },
          "created_by": {
            "type": "integer",
            "example": 42,
            "description": "Created By"
          },
          "updated_at": {
            "type": "string",
            "example": "2017-09-07T04:51:59",
            "description": "Updated At (Format: `datetime`)"
          },
          "updated_by": {
            "type": "integer",
            "example": 42,
            "description": "Updated By"
          },
          "fullname_from": {
            "type": "string",
            "example": "Admin",
            "description": "Sender Fullname"
          },
          "fullname_to": {
            "type": "string",
            "example": "John Doe",
            "description": "Recepient Fullname"
          },
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Record ID"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID\n"
          },
          "payment_method_name": {
            "type": "string",
            "example": "ADM",
            "description": "Payment Method Name\n"
          },
          "counter_payment_method": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method Counter\n"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit dari admin",
            "description": "Formated Transaction Notes"
          },
          "real_trx_notes": {
            "type": "string",
            "example": "Deposit dari Admin",
            "description": "Transaction Notes"
          },
          "refund_notes": {
            "type": "string",
            "example": "Refund by Admin",
            "description": "Refund Notes"
          },
          "rename_status_deposit": {
            "type": "string",
            "example": "Diproses",
            "description": "Status Common Name"
          },
          "role_id_from": {
            "type": "integer",
            "example": 2,
            "description": "Sender Role ID"
          },
          "role_id_to": {
            "type": "integer",
            "example": 151,
            "description": "Recepient Role ID"
          },
          "status": {
            "type": "string",
            "example": "success",
            "description": "Status",
            "enum": [
              "success",
              "user_purchase_failed",
              "failed",
              "refunded",
              "new",
              "user_purchase_cancel",
              "refund_begin",
              "user_purchase_success",
              "requested",
              "user_purchase_request"
            ]
          },
          "status_id": {
            "type": "integer",
            "example": 1
          },
          "trx_amount": {
            "type": "integer",
            "example": 999999,
            "description": "Transaction Amount"
          },
          "trx_hash": {
            "type": "string",
            "example": "ek1zgml4mklxjord",
            "description": "Sender PiggyBank Transaction Hash (Admin to Seller | Sales to Seller | Seller to Seller)"
          },
          "trx_hash_to": {
            "type": "string",
            "example": "ek1zgml4mklxjord",
            "description": "Recepient PiggyBank Transaction Hash (Sales to Seller | Seller to Seller)"
          },
          "uid_from": {
            "type": "integer",
            "example": 0,
            "description": "Sender User ID"
          },
          "uid_to": {
            "type": "integer",
            "example": 42,
            "description": "Recepient User ID"
          },
          "balance_direction": {
            "type": "string",
            "description": "Balance Direction",
            "enum": [
              "debit",
              "credit"
            ]
          },
          "balance_direction_common_name": {
            "type": "string",
            "description": "Balance Direction Common Name",
            "enum": [
              "Saldo Masuk",
              "Saldo Keluar"
            ]
          },
          "username_from": {
            "type": "string",
            "example": "admin",
            "description": "Sender Username"
          },
          "username_to": {
            "type": "string",
            "example": "jackdoe",
            "description": "Recepient Username"
          }
        }
      },
      "UserCreditBalanceResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/CreditBalanceResponseData"
          }
        }
      },
      "CreditBalanceResponseData": {
        "properties": {
          "credit_balance": {
            "type": "integer",
            "example": 0,
            "description": "Credit Saldo"
          },
          "debit_balance": {
            "type": "integer",
            "example": 1900000,
            "description": "Debit Saldo"
          },
          "total_balance": {
            "type": "integer",
            "example": 1900000,
            "description": "Balance Saldo"
          }
        }
      },
      "UserLocationRequest": {
        "required": [
          "long",
          "lat"
        ],
        "properties": {
          "long": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Phone Number / username to Login."
          },
          "lat": {
            "type": "string",
            "example": "106.8249641",
            "description": "Password to Login."
          }
        }
      },
      "PiggyBankCashFlowUserFromAppsRequest": {
        "properties": {
          "rp": {
            "type": "integer",
            "example": 10,
            "description": "Record Per Page"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Current Page"
          }
        }
      },
      "PiggyBankCashFlowForAppsResponse": {
        "properties": {
          "args": {
            "$ref": "#/definitions/AppsHistoryArgs"
          },
          "meta": {
            "$ref": "#/definitions/PiggyMeta"
          },
          "result": {
            "$ref": "#/definitions/PiggyResult"
          }
        }
      },
      "AppsHistoryArgs": {
        "properties": {
          "f": {
            "$ref": "#/definitions/filterAppsData"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Current Page"
          },
          "rp": {
            "type": "integer",
            "example": 25,
            "description": "Record per Page"
          }
        }
      },
      "PiggyBankCashFlowResponse": {
        "properties": {
          "meta": {
            "$ref": "#/definitions/PiggyMeta"
          },
          "result": {
            "$ref": "#/definitions/PiggyResult"
          }
        }
      },
      "filterAppsData": {
        "properties": {
          "date": {
            "$ref": "#/definitions/PiggyBankCashFlowRequestDate"
          },
          "desc": {
            "type": "string",
            "example": "purchase",
            "description": "Category Credit Transaction to filter"
          },
          "email": {
            "type": "string",
            "example": "081230667822@yapulsa.com",
            "description": "Email to Filter (phonenumber + '@yapulsa.com')"
          },
          "trx_id": {
            "type": "string",
            "example": "YPX2-123456",
            "description": "Trx Id. to Filter"
          }
        }
      },
      "PiggyMeta": {
        "properties": {
          "message": {
            "type": "string",
            "example": "valid response"
          },
          "status": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PiggyItemsData": {
        "properties": {
          "id": {
            "type": "string",
            "example": "deposit_byadmin"
          },
          "image_url": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "Admin Top Up"
          },
          "price": {
            "type": "integer",
            "example": 100000
          },
          "qty": {
            "type": "integer",
            "example": 1
          },
          "url": {
            "type": "string",
            "example": ""
          }
        }
      },
      "PiggyData": {
        "properties": {
          "campaign": {
            "type": "string",
            "example": "abc"
          },
          "category": {
            "type": "string",
            "example": "DEPOSIT"
          },
          "credit_balance": {
            "type": "string",
            "example": "0.00"
          },
          "dc": {
            "type": "string",
            "example": "d"
          },
          "debit_balance": {
            "type": "string",
            "example": "1900000.00"
          },
          "desc": {
            "type": "string",
            "example": "purchase of credit (deposit)"
          },
          "email": {
            "type": "string",
            "example": "a@a.com"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PiggyItemsData"
            }
          },
          "mid": {
            "type": "integer",
            "example": 3
          },
          "ref_transaction": {
            "type": "integer",
            "example": 0
          },
          "total_balance": {
            "type": "string",
            "example": "1900000.00"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000
          },
          "trx_date": {
            "type": "string",
            "example": "2017-07-24 15:35:42"
          },
          "trx_id": {
            "type": "string",
            "example": "DEPOSIT-1-81MITY"
          },
          "trx_merchant_trxid": {
            "type": "string",
            "example": "DEPOSIT-1-81MITY"
          },
          "userid": {
            "type": "integer",
            "example": 5
          }
        }
      },
      "PiggyResult": {
        "properties": {
          "current_page": {
            "type": "integer",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PiggyData"
            }
          },
          "from": {
            "type": "integer",
            "example": 1
          },
          "last_page": {
            "type": "integer",
            "example": 2
          },
          "next_page_url": {
            "type": "string",
            "example": "https://piggybank.sepulsa.co.id/api/v1/user/cashflow?page=2"
          },
          "per_page": {
            "type": "integer",
            "example": 5
          },
          "prev_page_url": {
            "type": "string",
            "example": "https://piggybank.sepulsa.co.id/api/v1/user/cashflow?page=1"
          },
          "to": {
            "type": "integer",
            "example": 5
          },
          "total": {
            "type": "integer",
            "example": 9
          }
        }
      },
      "PiggyBankCashFlowRequest": {
        "required": [
          "date"
        ],
        "properties": {
          "rp": {
            "type": "integer",
            "example": 10,
            "description": "Record Per Page"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Current Page"
          },
          "trx_id": {
            "type": "string",
            "example": "YPX2-123456",
            "description": "Transaction Id to filter"
          },
          "email": {
            "type": "string",
            "example": "08323456789@yapulsa.com",
            "description": "Email to filter"
          },
          "date": {
            "$ref": "#/definitions/PiggyBankCashFlowRequestDate"
          }
        }
      },
      "PiggyBankCashFlowUserRequest": {
        "required": [
          "date"
        ],
        "properties": {
          "rp": {
            "type": "integer",
            "example": 10,
            "description": "Record Per Page"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Current Page"
          },
          "date": {
            "$ref": "#/definitions/PiggyBankCashFlowRequestDate"
          }
        }
      },
      "PiggyBankCashFlowRequestDate": {
        "properties": {
          "start": {
            "type": "string",
            "example": "2017-07-01",
            "description": "Start Date"
          },
          "end": {
            "type": "string",
            "example": "2017-07-31",
            "description": "End Date"
          }
        }
      },
      "PiggyBankAddDepositData": {
        "properties": {
          "amount": {
            "type": "string",
            "example": "100000.00"
          },
          "currency": {
            "type": "string",
            "example": "IDR"
          },
          "identifier": {
            "type": "string",
            "example": "confirmed"
          },
          "status": {
            "type": "string",
            "example": "+628131230001"
          },
          "trx_hash": {
            "type": "string",
            "example": "abcdefghijklmno"
          },
          "trxid": {
            "type": "string",
            "example": "DEPOSIT-17"
          }
        }
      },
      "AdminBulkDepositData": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "order_id": {
            "type": "string",
            "example": "123456"
          },
          "total_amount": {
            "type": "integer",
            "example": 100000
          },
          "status": {
            "type": "string",
            "example": "new"
          },
          "cluster_id": {
            "type": "integer",
            "example": 1,
            "description": "Cluster ID"
          },
          "partner_id": {
            "type": "integer",
            "example": 1,
            "description": "Partner ID"
          },
          "created_at": {
            "type": "string",
            "example": "2018-03-07 16:45:47.078973"
          },
          "updated_at": {
            "type": "string",
            "example": "2018-03-07 16:45:47.078973"
          },
          "created_by": {
            "type": "integer",
            "example": "1"
          },
          "updated_by": {
            "type": "integer",
            "example": ""
          }
        }
      },
      "AdminBulkDepositDetailData": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "user_bulk_deposit_id": {
            "type": "integer",
            "example": 1
          },
          "uid_to": {
            "type": "integer",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "success"
          },
          "username_to": {
            "type": "string",
            "example": 188053211
          },
          "trx_amount": {
            "type": "integer",
            "example": 10000
          },
          "trx_notes": {
            "type": "string",
            "example": "notes"
          }
        }
      },
      "PiggyBankAdminAddResponse": {
        "properties": {
          "data": {
            "$ref": "#/definitions/PiggyBankAddDepositData"
          },
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      },
      "AdminAddBulkDepositResponse": {
        "properties": {
          "data": {
            "type": "object",
            "example": {},
            "description": "Data"
          },
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      },
      "AdminBulkDepositResponse": {
        "properties": {
          "data": {
            "properties": {
              "rescode": {
                "type": "string",
                "example": "0000",
                "description": "Response Code"
              },
              "message": {
                "$ref": "#/definitions/ResponseMessage"
              },
              "data": {
                "properties": {
                  "current_page": {
                    "type": "integer",
                    "example": 2
                  },
                  "last_page": {
                    "type": "integer",
                    "example": 10
                  },
                  "next_page": {
                    "type": "integer",
                    "example": 3
                  },
                  "per_page": {
                    "type": "integer",
                    "example": 5
                  },
                  "prev_page": {
                    "type": "integer",
                    "example": 1
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AdminBulkDepositData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AdminBulkDepositDetailResponse": {
        "properties": {
          "data": {
            "properties": {
              "rescode": {
                "type": "string",
                "example": "0000",
                "description": "Response Code"
              },
              "message": {
                "$ref": "#/definitions/ResponseMessage"
              },
              "data": {
                "properties": {
                  "current_page": {
                    "type": "integer",
                    "example": 2
                  },
                  "last_page": {
                    "type": "integer",
                    "example": 10
                  },
                  "next_page": {
                    "type": "integer",
                    "example": 3
                  },
                  "per_page": {
                    "type": "integer",
                    "example": 5
                  },
                  "prev_page": {
                    "type": "integer",
                    "example": 1
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AdminBulkDepositDetailData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserListResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 2
              },
              "last_page": {
                "type": "integer",
                "example": 10
              },
              "next_page": {
                "type": "integer",
                "example": 3
              },
              "per_page": {
                "type": "integer",
                "example": 5
              },
              "prev_page": {
                "type": "integer",
                "example": 1
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UserResponseData"
                }
              }
            }
          }
        }
      },
      "UserDataResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/UserResponseData"
          }
        }
      },
      "UserAddDataResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/UserAddResponseData"
          }
        }
      },
      "UserResponseData": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "User ID"
          },
          "username": {
            "type": "string",
            "example": 175221422,
            "description": "Username for login"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "visit_status": {
            "type": "integer",
            "example": 1,
            "description": "visit status"
          },
          "last_visited_at": {
            "type": "string",
            "example": "2018-07-23T10:43:34",
            "description": "last visited"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "area_provinsi": {
            "type": "string",
            "example": "Sumatra Barat",
            "description": "Province/State Name"
          },
          "area_kabupaten": {
            "type": "string",
            "example": "Kota Padang",
            "description": "District/City Name"
          },
          "area_kecamatan": {
            "type": "string",
            "example": "Padang Utara",
            "description": "Sub-District Level-1 Name"
          },
          "area_kelurahan": {
            "type": "string",
            "example": "Ulak Karang Utara",
            "description": "Sub-District Level-2 Name"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "last_logged_in_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Last User Login At"
          },
          "role": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UserRoleListData"
            }
          },
          "created_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Created At"
          },
          "created_by": {
            "type": "integer",
            "example": 1,
            "description": "Created By"
          },
          "status": {
            "type": "integer",
            "example": 1,
            "description": "Status Data"
          },
          "updated_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Updated At"
          },
          "updated_by": {
            "type": "integer",
            "example": 1,
            "description": "Updated By"
          },
          "upline_margin_percentage": {
            "type": "integer",
            "example": 1,
            "description": "Upline margin percentage"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          },
          "meta": {
            "type": "object",
            "description": "Meta Data (each payment-method has it own specific meta data)",
            "example": {
              "pm_va_bca": "1049412345678901",
              "pm_va_mandiri": "1049409876543210",
              "pm_va_bni": "1049412312345674",
              "pm_va_permata": "1049498769876543"
            }
          }
        }
      },
      "UserAddResponseData": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "User ID"
          },
          "username": {
            "type": "string",
            "example": 175221422,
            "description": "Username for login"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "first_loggedin_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "First login"
          },
          "first_deposit_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "First deposit"
          },
          "role_id": {
            "type": "string",
            "example": ""
          },
          "created_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Created At"
          },
          "created_by": {
            "type": "integer",
            "example": 1,
            "description": "Created By"
          },
          "status": {
            "type": "integer",
            "example": 1,
            "description": "Status Data"
          },
          "updated_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Updated At"
          },
          "updated_by": {
            "type": "integer",
            "example": 1,
            "description": "Updated By"
          },
          "upline_margin_percentage": {
            "type": "integer",
            "example": 1,
            "description": "Upline margin percentage"
          },
          "margin_balance": {
            "type": "integer",
            "example": 0,
            "description": "margin balance"
          },
          "login_attempt": {
            "type": "integer",
            "example": 0,
            "description": "login attempt"
          },
          "fcm_token": {
            "type": "string",
            "example": "",
            "description": "fcm token"
          },
          "upline_margin": {
            "type": "integer",
            "example": 0,
            "description": "upline margin"
          },
          "otp": {
            "type": "string",
            "example": "init",
            "description": "otp"
          },
          "plafon_status": {
            "type": "integer",
            "example": 0,
            "description": "plafon status"
          },
          "last_loggedin_at": {
            "type": "string",
            "example": "",
            "description": "last_loggedin_at"
          },
          "otp_created_at": {
            "type": "string",
            "example": "",
            "description": "otp_created_at"
          },
          "upline_name": {
            "type": "string",
            "example": "arief",
            "description": "upline name"
          },
          "parent_area_name": {
            "type": "string",
            "example": "Jatim",
            "description": "parent area name"
          },
          "cluster_name": {
            "type": "string",
            "example": "Malang",
            "description": "cluster name"
          },
          "partner_id": {
            "type": "integer",
            "example": 99,
            "description": "partner id"
          },
          "area_name": {
            "type": "string",
            "example": "Kab Malang",
            "description": "area name"
          },
          "area_provinsi": {
            "type": "string",
            "example": "Sumatra Barat",
            "description": "Province/State Name"
          },
          "area_kabupaten": {
            "type": "string",
            "example": "Kota Padang",
            "description": "District/City Name"
          },
          "area_kecamatan": {
            "type": "string",
            "example": "Padang Utara",
            "description": "Sub-District Level-1 Name"
          },
          "area_kelurahan": {
            "type": "string",
            "example": "Ulak Karang Utara",
            "description": "Sub-District Level-2 Name"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          }
        }
      },
      "UserData": {
        "required": [
          "username",
          "password",
          "fullname",
          "phonenumber",
          "email",
          "longitude",
          "latitude",
          "area_id",
          "cluster_id",
          "upline_user_id",
          "use_pin",
          "is_password_changed",
          "photo_filename",
          "kredit",
          "is_loggedin"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": 175221422,
            "description": "Username for login"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "Password for login"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          }
        }
      },
      "UserDataWithRole": {
        "required": [
          "username",
          "password",
          "fullname",
          "phonenumber",
          "email",
          "area_id",
          "cluster_id",
          "upline_user_id",
          "role_id"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": 175221422,
            "description": "Username for login"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "Password for login"
          },
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "role_id": {
            "type": "integer",
            "example": 8,
            "description": "Role ID"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          }
        }
      },
      "UserUpdateData": {
        "required": [
          "fullname",
          "phonenumber",
          "email",
          "longitude",
          "latitude",
          "area_id",
          "cluster_id",
          "upline_user_id",
          "use_pin",
          "is_password_changed",
          "photo_filename",
          "kredit",
          "is_loggedin"
        ],
        "properties": {
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "phonenumber": {
            "type": "string",
            "example": 342391,
            "description": "Phone Number"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "area_id": {
            "type": "integer",
            "example": 2,
            "description": "Area ID"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "upline_user_id": {
            "type": "integer",
            "example": 1,
            "description": "Upload User ID"
          },
          "use_pin": {
            "type": "integer",
            "example": 1,
            "description": "Use Pin/Password when do transaction"
          },
          "is_password_changed": {
            "type": "integer",
            "example": 1,
            "description": "Flag for password changed"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "kredit": {
            "type": "integer",
            "example": 1000,
            "description": "User Credit Balance"
          },
          "is_loggedin": {
            "type": "integer",
            "example": 1,
            "description": "Flag for user Logged In"
          },
          "upline_margin_percentage": {
            "type": "integer",
            "example": 1,
            "description": "Upline margin percentage"
          },
          "account_bank": {
            "type": "string",
            "example": "BCA",
            "description": "Bank Account"
          },
          "account_number": {
            "type": "string",
            "example": "2312312312",
            "description": "Account Number"
          },
          "account_name": {
            "type": "string",
            "example": "Nama Saya",
            "description": "Account Name"
          }
        }
      },
      "ProfileUpdateData": {
        "properties": {
          "fullname": {
            "type": "string",
            "example": "Super Admin",
            "description": "Full Name"
          },
          "email": {
            "type": "string",
            "example": "admin@yapulsa.com",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "example": "kepanjen",
            "description": "address"
          },
          "postal_code": {
            "type": "string",
            "example": "123456",
            "description": "postal code"
          },
          "photo_filename": {
            "type": "string",
            "example": "http://www.yapulsa.com/file/photo/image123.jpg",
            "description": "Photo File Location"
          },
          "area_id": {
            "type": "integer",
            "example": 1,
            "description": "Area ID"
          },
          "area_provinsi": {
            "type": "string",
            "example": "Sumatra Barat",
            "description": "Province/State Name (only available if `area_id` field is exists)"
          },
          "area_kabupaten": {
            "type": "string",
            "example": "Kota Padang",
            "description": "District/City Name (only available if `area_id` field is exists)"
          },
          "area_kecamatan": {
            "type": "string",
            "example": "Padang Utara",
            "description": "Sub-District Level-1 Name (only available if `area_id` field is exists)"
          },
          "area_kelurahan": {
            "type": "string",
            "example": "Ulak Karang Utara",
            "description": "Sub-District Level-2 Name (only available if `area_id` field is exists)"
          }
        }
      },
      "UserFCMTokenUpdateData": {
        "required": [
          "fcm_token"
        ],
        "properties": {
          "fcm_token": {
            "type": "string",
            "example": "ftEnXTdF4tg:APA91bEhoFn6j8v48L8cYIE3TR9XYILznLeY2wuANw8jhNnevpWkIGxY9zBXs0pLpt7pIS2rGmbWzPUTfSCKqIXfGJEo-BH1zjTArG8TACnCWjQC4zMicDkIaPGp116sGzsnvkCeSzy0",
            "description": "FCM Token will updated"
          }
        }
      },
      "UserRoleListData": {
        "properties": {
          "role_id": {
            "type": "integer",
            "example": 1,
            "description": "Role ID"
          },
          "role_name": {
            "type": "string",
            "example": "ADM",
            "description": "Role Name"
          }
        }
      },
      "MultipleUserFCMNotifData": {
        "required": [
          "ids",
          "message_title",
          "message_body",
          "deeplink"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "example": [
              2,
              3
            ],
            "description": "User Ids to send FCM"
          },
          "cluster_id": {
            "type": "array",
            "example": [
              2,
              3
            ],
            "description": "Cluster Ids to send FCM"
          },
          "message_title": {
            "type": "string",
            "example": "Msg Title To Send",
            "description": "Msg Title To Send"
          },
          "message_body": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "deeplink": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          }
        }
      },
      "MultipleUserFCMNotifDataProductStatus": {
        "required": [
          "ids",
          "message_title",
          "message_body",
          "deeplink",
          "product_id",
          "product_status"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "example": [
              2,
              3
            ],
            "description": "User Ids to send FCM"
          },
          "cluster_id": {
            "type": "array",
            "example": [
              2,
              3
            ],
            "description": "Cluster Ids to send FCM"
          },
          "message_title": {
            "type": "string",
            "example": "Msg Title To Send",
            "description": "Msg Title To Send"
          },
          "message_body": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "deeplink": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "product_id": {
            "type": "integer",
            "example": 1,
            "description": "Product Id to send FCM"
          },
          "product_status": {
            "type": "integer",
            "example": 1,
            "description": "Product Status"
          }
        }
      },
      "SingleUserFCMNotifData": {
        "required": [
          "message_title",
          "message_body",
          "deeplink"
        ],
        "properties": {
          "message_title": {
            "type": "string",
            "example": "Msg Title To Send",
            "description": "Msg Title To Send"
          },
          "message_body": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "deeplink": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          }
        }
      },
      "SingleUserFCMNotifDataProductStatus": {
        "required": [
          "message_title",
          "message_body",
          "deeplink",
          "product_id",
          "product_status"
        ],
        "properties": {
          "message_title": {
            "type": "string",
            "example": "Msg Title To Send",
            "description": "Msg Title To Send"
          },
          "message_body": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "deeplink": {
            "type": "string",
            "example": "Msg Body To Send",
            "description": "Msg Body To Send"
          },
          "product_id": {
            "type": "integer",
            "example": 1,
            "description": "Product Id to send FCM"
          },
          "product_status": {
            "type": "integer",
            "example": 1,
            "description": "Product Status"
          }
        }
      },
      "UserListYapulsaCreditHistoryRequestBody": {
        "description": "available fields:\n- `id` (integer)\n- `uid_from` (integer)\n- `uid_to` (integer)\n- `trx_amount` (integer)\n- `trx_notes` (string)\n- `trx_hash` (string)\n- `trx_hash_to` (string)\n- `status` (string)\n- `created_by` (integer)\n- `updated_by` (integer)\n- `created_at` (string; date-time)\n- `updated_at` (string; date-time)",
        "properties": {
          "rp": {
            "type": "integer",
            "example": 25,
            "description": "Record Per Page"
          },
          "q": {
            "type": "string",
            "example": "id > 0",
            "description": "SQL Raw Query for searching"
          },
          "f": {
            "type": "object",
            "example": {
              "uid_from": 0,
              "uid_to": 10
            },
            "description": "Filter by table-fields key-value pair/s (exact value)"
          },
          "frange": {
            "type": "object",
            "example": {
              "created_at": {
                "start": "2016-01-01 00:00:01",
                "end": "2018-02-02 23:59:59"
              }
            },
            "description": "Filter by date-period"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Page Number"
          },
          "o": {
            "type": "object",
            "example": {
              "id": "desc",
              "created_at": "asc"
            },
            "description": "Order by"
          }
        }
      },
      "ListRequestBody": {
        "description": "available fields:\n `id` (integer),\n- `username` (string),\n- `password` (string),\n- `fullname` (string),\n- `phonenumber` (string),\n- `email` (string),\n- `longitude` (string),\n- `latitude` (string),\n- `area_id` (integer),\n- `upline_user_id` (integer),\n- `use_pin` (integer),\n- `is_password_changed` (integer),\n- `photo_filename` (string),\n- `created_by` (integer),\n- `updated_at` (string; date-time),\n- `updated_by` (integer),\n- `created_at` (string; date-time),\n- `status` (integer),\n- `kredit` (integer),\n- `poin` (integer),\n- `is_loggedin` (integer),\n- `last_loggedin_at` (string; date-time),\n- `password_salt` (string),\n- `cluster_id` (integer),\n- `piggy_current_token` (string),\n- `fcm_token` (string),\n- `otp` (string),\n- `otp_created_at` (string; date-time),\n- `upline_margin_percentage` (integer),\n- `upline_margin` (integer),\n- `login_attempt` (integer),\n- `photo_url` (string),\n- `margin_balance` (integer)",
        "properties": {
          "rp": {
            "type": "integer",
            "example": 25,
            "description": "Record Per Page"
          },
          "q": {
            "type": "string",
            "example": "id > 0",
            "description": "SQL Raw Query for searching"
          },
          "f": {
            "type": "object",
            "example": {
              "username": "admin",
              "status": 1
            },
            "description": "Filter by table-fields key-value pair/s (exact value)"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Page Number"
          },
          "o": {
            "type": "object",
            "example": {
              "id": "desc",
              "created_at": "asc"
            },
            "description": "Order by"
          },
          "include_custom_data": {
            "type": "boolean",
            "description": "Whether need to show `meta` field for each record"
          }
        }
      },
      "BulkAddDepositListRequestBody": {
        "description": "available fields:\n `id` (integer),\n- `order_id` (integer),\n- `total_amount` (integer),\n- `status` (string),\n- `partner_id` (integer),\n- `cluster_id` (integer),\n- `created_by` (integer),\n- `updated_at` (string; date-time),\n- `updated_by` (integer),\n- `created_at` (string; date-time)",
        "properties": {
          "rp": {
            "type": "integer",
            "example": 25,
            "description": "Record Per Page"
          },
          "q": {
            "type": "string",
            "example": "id > 0",
            "description": "SQL Raw Query for searching"
          },
          "f": {
            "type": "object",
            "example": {
              "cluster_id": 1,
              "status": "new"
            },
            "description": "Filter by table-fields key-value pair/s (exact value)"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Page Number"
          },
          "o": {
            "type": "object",
            "example": {
              "id": "desc",
              "created_at": "asc"
            },
            "description": "Order by"
          }
        }
      },
      "TransactionDataReguler": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "price_id"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": 1,
            "description": "Price ID\n"
          }
        }
      },
      "TransactionDataPrimaryOperator": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "195",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": "0",
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Number to topuped"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataPdam": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id",
          "cur_sell_price",
          "operator_code"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "241",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": 1998900001,
            "description": "PDAM Account Number to Pay"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": "100000",
            "description": "Return Value From Inquiry Process (Without Admin Fee & Fee)\n"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          },
          "operator_code": {
            "type": "string",
            "example": "pdam_aetra",
            "description": "PDAM Operator Code"
          }
        }
      },
      "TransactionDataPlnPre": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "phone_number",
          "customer_number",
          "price_id"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "181",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": 3211712,
            "description": "PLN Meter Number"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataPlnPost": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id",
          "cur_sell_price"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "177",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": "512345610000",
            "description": "PLN Meter Number"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": "100000",
            "description": "Return Value From Inquiry Process (Without Admin Fee & Fee)\n"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataTelkom": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id",
          "cur_sell_price"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "239",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": 557058,
            "description": "Telkom MSISDN to pay"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": "100000",
            "description": "Return Value From Inquiry Process (Without Admin Fee & Fee)\n"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataBpjs": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id",
          "cur_sell_price"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "243",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": "807400010001",
            "description": "Multifinance Account Number to Pay"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": "100000",
            "description": "Return Value From Inquiry Process (Without Admin Fee & Fee)\n"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataMulti": {
        "required": [
          "uid_to",
          "trx_amount",
          "trx_notes",
          "amount",
          "payment_method_id",
          "customer_number",
          "price_id",
          "cur_sell_price"
        ],
        "properties": {
          "uid_to": {
            "type": "integer",
            "example": 2,
            "description": "User Id To Toped Up"
          },
          "trx_amount": {
            "type": "integer",
            "example": 100000,
            "description": "Amount to topuped"
          },
          "trx_notes": {
            "type": "string",
            "example": "Deposit Untuk Sadmin",
            "description": "Transaction Notes"
          },
          "price_id": {
            "type": "integer",
            "example": "195",
            "description": "Price ID\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID (0 for Chip RS , 1 for Piggy bank deposit, 2 for other payment)\n"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "customer_number": {
            "type": "string",
            "example": "807400010001",
            "description": "Multifinance Account Number to Pay"
          },
          "cur_sell_price": {
            "type": "integer",
            "example": "100000",
            "description": "Return Value From Inquiry Process (Without Admin Fee & Fee)\n"
          },
          "amount": {
            "type": "integer",
            "example": 1,
            "description": "Qty Product to buy\n"
          }
        }
      },
      "TransactionDataResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "properties": {
              "deposit_transaction": {
                "$ref": "#/definitions/PiggyBankAddDepositData"
              },
              "transaction": {
                "$ref": "#/definitions/TransactionResponseData"
              }
            }
          }
        }
      },
      "TransactionResponseData": {
        "properties": {
          "curr_fee1": {
            "type": "integer",
            "example": 1,
            "description": "Fee 1\n"
          },
          "product_type_name": {
            "type": "string",
            "example": "Electricity",
            "description": "Product Type Name"
          },
          "created_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Created At\n"
          },
          "customer_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Number (PLN, BPJS, Mobile, ddl)"
          },
          "curr_biller_name": {
            "type": "string",
            "example": "Electricity",
            "description": "Biller Name"
          },
          "phone_number": {
            "type": "string",
            "example": 174774107,
            "description": "Customer Phone Number"
          },
          "sku": {
            "type": "string",
            "example": "JKTPLN20",
            "description": "Customer Phone Number"
          },
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Transaction ID\n"
          },
          "cur_purchase_price": {
            "type": "integer",
            "example": 10000,
            "description": "Purchase Price\n"
          },
          "curr_fee2": {
            "type": "integer",
            "example": 1,
            "description": "Fee 2\n"
          },
          "updated_by": {
            "type": "integer",
            "example": 1,
            "description": "Updated By\n"
          },
          "curr_sell_price": {
            "type": "integer",
            "example": 10250,
            "description": "Fee 2\n"
          },
          "status": {
            "type": "integer",
            "example": 1,
            "description": "Trx Status\n"
          },
          "product_name": {
            "type": "string",
            "example": "Telkomse 50.000",
            "description": "Product Name"
          },
          "updated_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Updated At\n"
          },
          "operator_id": {
            "type": "integer",
            "example": 1,
            "description": "Operator ID\n"
          },
          "trx_hash": {
            "type": "string",
            "example": "j7bmd8p6y0lr3y2v",
            "description": "Wallet Trx Hash\n"
          },
          "longitude": {
            "type": "string",
            "example": "-6.1753924",
            "description": "Longitude"
          },
          "latitude": {
            "type": "string",
            "example": "106.8249641",
            "description": "Latitude"
          },
          "cur_product_type_id": {
            "type": "integer",
            "example": 1,
            "description": "Product Type ID\n"
          },
          "created_by": {
            "type": "integer",
            "example": 1,
            "description": "Created By\n"
          },
          "price_id": {
            "type": "integer",
            "example": 1,
            "description": "Price ID\n"
          },
          "area_name": {
            "type": "string",
            "example": "INDRAGIRI AREA",
            "description": "AREA NAME\n"
          },
          "amount": {
            "type": "integer",
            "example": "100000",
            "description": "Price ID\n"
          },
          "order_id": {
            "type": "string",
            "example": "YPDTRX-Jakarta|XXX-108",
            "description": "Order Id\n"
          },
          "payment_method_id": {
            "type": "integer",
            "example": 1,
            "description": "Payment Method ID\n"
          },
          "product_value": {
            "type": "string",
            "example": "50.000",
            "description": "It Can Be Denom"
          },
          "created_by_username": {
            "type": "string",
            "example": 21801250,
            "description": "Phone Number / username to Login."
          },
          "processed_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Processed At\n"
          },
          "finished_at": {
            "type": "string",
            "example": "2017-07-11T13:51:25",
            "description": "Finished At\n"
          },
          "payment_method_name": {
            "type": "string",
            "example": "ADM",
            "description": "PaymentMethod Name\n"
          },
          "updated_by_username": {
            "type": "string",
            "example": 21801250,
            "description": "Phone Number / username to Login."
          },
          "curr_margin": {
            "type": "integer",
            "example": 1000,
            "description": "Margin\n"
          },
          "area_id": {
            "type": "integer",
            "example": 1,
            "description": "Area ID"
          },
          "product_type_id": {
            "type": "integer",
            "example": 1,
            "description": "Product Type ID"
          },
          "cur_modem_process": {
            "type": "integer",
            "example": 1,
            "description": "Modem Process"
          },
          "biller_id": {
            "type": "integer",
            "example": 1,
            "description": "Biller ID\n"
          },
          "product_description": {
            "type": "string",
            "example": "Telkomsel 50rb Description",
            "description": "Product Description"
          },
          "status_name": {
            "type": "string",
            "example": "Success",
            "description": "Status Name"
          },
          "cluster_id": {
            "type": "integer",
            "example": 2,
            "description": "Cluster ID"
          },
          "operator_name": {
            "type": "string",
            "example": "Telkomsel",
            "description": "Operator Name\n"
          },
          "biller_message": {
            "type": "array",
            "items": {
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success",
                  "description": "Status"
                },
                "id": {
                  "type": "integer",
                  "example": 1,
                  "description": "ID\n"
                },
                "created_at": {
                  "type": "string",
                  "example": "2017-07-11T13:51:25",
                  "description": "Created At\n"
                },
                "description": {
                  "type": "string",
                  "example": "Transaction Success",
                  "description": "Description"
                },
                "status_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "Status ID\n"
                }
              }
            }
          },
          "promo": {
            "type": "object",
            "example": {
              "cart": {
                "identifiers": {
                  "uid": 4775
                },
                "order_info": {
                  "area_id": 1048,
                  "currency": "IDR",
                  "is_bbm": 0,
                  "is_bpjs": 0,
                  "is_chip": 0,
                  "is_data": 0,
                  "is_deposit": 0,
                  "is_game_voucher": 0,
                  "is_loan": 0,
                  "is_mobile": 1,
                  "is_multifinance": 0,
                  "is_pdam": 0,
                  "is_pln": 0,
                  "is_pln_postpaid": 0,
                  "is_pln_prepaid": 0,
                  "is_saldo_chip": 0,
                  "order_id": "YPDTRX-Indragiri|IDG-10187",
                  "partner_id": 2,
                  "partner_name": "Sarana Media Seluler",
                  "payment_methods": "Deposit",
                  "total_amount": 5800
                },
                "products": [
                  {
                    "name": "Axis Rp 5.000",
                    "price": 5800,
                    "quantity": 1,
                    "sku": "IAX5"
                  }
                ],
                "promocode": ""
              },
              "created_at": "2017-10-31T17:10:47",
              "id": 49,
              "order_id": "YPDTRX-Indragiri|IDG-10187",
              "response": {
                "benefits": [
                  {
                    "currency": "",
                    "label": "Cashback Rp. 10,000",
                    "max_value_allow": "0",
                    "type": "cashback",
                    "value": "10000"
                  }
                ],
                "promo": {
                  "cart_condition": [
                    {
                      "key": "sku",
                      "logical": "AND",
                      "operand": "EQ",
                      "value": "IAX5"
                    },
                    {
                      "key": "quantity",
                      "logical": "AND",
                      "operand": "GTE",
                      "value": "1"
                    },
                    {
                      "key": "partner_name",
                      "logical": "AND",
                      "operand": "EQ",
                      "value": "Sarana Media Seluler"
                    }
                  ],
                  "enddate": "2017-12-23 09:34:31",
                  "id": 6,
                  "internal_title": "",
                  "max_usage": 100,
                  "payment_method": [
                    "1"
                  ],
                  "promoidentifiers": [
                    {
                      "created_at": "2017-10-31 14:04:49",
                      "id": 13,
                      "keyname": "uid",
                      "max_usage": 1,
                      "promoid": 6,
                      "updated_at": "2017-10-31 14:04:49"
                    }
                  ],
                  "schedule": {
                    "hour_end": "",
                    "hour_start": "",
                    "running_days": "everyday",
                    "running_hours": "allday"
                  },
                  "startdate": "2017-10-23 09:34:31",
                  "title": "YAPULSA - Cashback 10K Rupiah",
                  "weight": 999
                }
              },
              "status": "inquiry",
              "updated_at": "2017-10-31T17:10:47"
            },
            "description": "Attached promo if any. Null on empty.\n",
            "properties": {
              "cart": {
                "type": "object",
                "description": "Request cart"
              },
              "id": {
                "type": "integer",
                "description": "Transaction promo id"
              },
              "order_id": {
                "type": "string",
                "description": "Transaction order id"
              },
              "response": {
                "type": "object",
                "description": "Meowth response"
              },
              "status": {
                "type": "string",
                "description": "Promo status"
              },
              "created_at": {
                "type": "datetime",
                "description": "Create date"
              },
              "updated_at": {
                "type": "datetime",
                "description": "Update date"
              }
            }
          }
        }
      },
      "OTPResentResponse": {
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {}
        }
      },
      "PaymentMethodRegistrationRequest": {
        "type": "object",
        "required": [
          "payment_method_type",
          "payment_method_service"
        ],
        "properties": {
          "payment_method_type": {
            "type": "string",
            "example": "other",
            "description": "Payment Method Type\n",
            "enum": [
              "virtual_account_open",
              "mini_market",
              "e_money",
              "other"
            ]
          },
          "payment_method_service": {
            "type": "string",
            "example": "other",
            "description": "Payment Method Service (based on `payment_method_type`\n",
            "enum": [
              "BCA",
              "BNI",
              "MANDIRI",
              "PERMATA",
              "ALFAMART",
              "INDOMARET",
              "UNKNOWN"
            ]
          }
        }
      },
      "PaymentMethodRegistrationResponse": {
        "type": "object",
        "properties": {
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          },
          "message": {
            "$ref": "#/definitions/ResponseMessage"
          },
          "data": {
            "$ref": "#/definitions/PaymentMethodRegistrationResponseData"
          }
        }
      },
      "PaymentMethodRegistrationResponseData": {
        "type": "object",
        "properties": {
          "payment_method_type": {
            "type": "string",
            "description": "Payment Method Type\n",
            "enum": [
              "virtual_account_open",
              "mini_market",
              "e_money",
              "other"
            ],
            "example": "virtual_account_open"
          },
          "payment_method_service": {
            "type": "string",
            "description": "Payment Method Service (based on `payment_method_type`\n",
            "enum": [
              "BCA",
              "BNI",
              "MANDIRI",
              "PERMATA",
              "ALFAMART",
              "INDOMARET",
              "UNKNOWN"
            ],
            "example": "BCA"
          },
          "payment_method_identity_number": {
            "type": "string",
            "description": "Payment Method Identity Number",
            "example": "1049412345678901"
          }
        }
      },
      "BusinessTypeListRequestBody":{
        "description":"available field:\n- `type_of_business` (string)",
        "properties": {
          "rp": {
            "type": "integer",
            "example": 25,
            "description": "Record Per Page"
          },
          "f": {
            "type": "object",
            "example": {
              "type_of_business":"Grosir"
            },
            "description": "Filter by table-fields key-value pair/s (exact value)"
          },
          "p": {
            "type": "integer",
            "example": 1,
            "description": "Page Number"
          }
        }
      },
      "BusinessTypeListResponse": {
        "properties": {
          "data": {
            "type": "array",
            "example": {
              "current_page": 1,
              "data": [
                {
                  "created_at": "2018-01-26T00:00:00",
                  "created_by": 1,
                  "icon": "https://yapulsav2.s3.amazonaws.com/icons/user_onboarding/ic_boarding_grosir.png",
                  "id": 1,
                  "sequence": 1,
                  "type_of_business": "Grosir",
                  "updated_at": "2018-01-23T17:34:25",
                  "updated_by": null
                }
              ],
              "last_page": 1,
              "next_page": null,
              "per_page": 25,
              "prev_page": null,
              "total": 1
            }
          },
          "message": {
            "properties": {
              "body": {
                "type": "string",
                "example": "SUCCESS",
                "description": "Response Message Body"
              },
              "title": {
                "type": "string",
                "example": "SUCCESS",
                "description": "Response Message Title"
              }
            }
          },
          "rescode": {
            "type": "string",
            "example": "0000",
            "description": "Response Code"
          }
        }
      }
    },
    "host": "gajahmada.sumpahpalapa.com",
    "hostX": "localhost:8888",
    "basePath": "/api/v1/"
  }